#!/usr/bin/env bash

set +e

# This script aims to compile neovim, even in environments where network access
# is restricted. We need the option to clone dependencies independent of the
# usual process. nvim-treesitter needs similar treatment where it will try and
# download parsers directly from the internet.

[[ -z "${PLUGINS+x}" ]] && PLUGINS=(
  tpope/vim-fugitive
  tpope/vim-fireplace
  nvim-lua/plenary.nvim
  nvim-telescope/telescope.nvim
  nvim-treesitter/nvim-treesitter
)

join_by() { local IFS="$1"; shift; echo "$*"; }

# Override these by prefixing them e.g: `NEOVIM_REPO=internal-mirror.com/neovim ./build-neovim`
[[ -z "${NEOVIM_REPO+x}" ]] && NEOVIM_REPO="https://github.com/neovim/neovim/releases/download/v0.9.5/nvim-linux64.tar.gz"
[[ -z "${PLUGIN_URL_BASE+x}" ]] && PLUGIN_URL_BASE="https://github.com/"
[[ -z "${PLUGIN_URL_MIDDLE+x}" ]] && PLUGIN_URL_MIDDLE="/zipball/"
[[ -z "${PLUGIN_URL_END+x}" ]] && PLUGIN_URL_END=""
[[ -z "${PLUGIN_EXT+x}" ]] && PLUGIN_EXT="zip"
[[ -z "${PLUGIN_COMMIT+x}" ]] && PLUGIN_COMMIT="master"

[[ -z "${CONFIG_TMPDIR+x}" ]] && CONFIG_TMPDIR=$(mktemp -d)
NVIM_TARBALL=nvim-linux64.tar.gz

cd $CONFIG_TMPDIR
pwd

ensure_neovim() {
  echo 'nvim not found, downloading'
  # N.B for now we just go for the compiled linux binary
  curl -L -o $NVIM_TARBALL $NEOVIM_REPO
  tar -zxf $NVIM_TARBALL 
  mkdir -p $HOME/.local
  # here it's best to cp > mv because mv doesn't merge with existing directories
  # (e.g bin/lib folders that already exist), rsync is another option but cp is
  # always available.
  cp -r ./nvim-linux64/* $HOME/.local
}

command -v nvim || ensure_neovim # install neovim if not found on PATH

ensure_neovim_config() {
  mkdir -p $HOME/.config/nvim
  touch $HOME/.config/nvim/init.lua
}

ensure_neovim_config

ensure_neovim_plugins() {
  echo 'downloading missing plugins'
  optional_deps_dir="$HOME/.config/nvim/pack/base/opt"
  mkdir -p $optional_deps_dir
  cd $optional_deps_dir
  for p in $(join_by ' ' "${PLUGINS[@]}"); do
    n=$(basename -- $p)
    if [ ! -d "$n" ]; then
      curl -L -o $n.$PLUGIN_EXT $PLUGIN_URL_BASE$p$PLUGIN_URL_MIDDLE$PLUGIN_COMMIT
      if [[ "$PLUGIN_EXT" -eq "zip" ]]; then
        unzip $n.$PLUGIN_EXT
      else
        tar -zxf $n.$PLUGIN_EXT
      fi
      rm $n.$PLUGIN_EXT
      mv $(find . -type d -name "*$n*" | head -1) $n
    fi
  done
  cd -
}

ensure_neovim_plugins
