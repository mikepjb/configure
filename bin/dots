#!/usr/bin/env bash
set -eu

export GITHUB=${GITHUB:-https://github.com}
export DOTFILES_PATH="$HOME/.dotfiles"
export DOTFILES_REPO="mikepjb/dotfiles.git"
export NOTES_PATH="$HOME/.notes"
export NOTES_REPO="mikepjb/notes.git"

export NEOVIM_PATH="$HOME/.config/nvim"
export NEOVIM_PLUGIN_PATH="$HOME/.config/nvim/pack/base/start"

main() {
    ensure_repo $DOTFILES_PATH $DOTFILES_REPO
    # ensure_repo $NOTES_PATH $NOTES_REPO # doesn't work yet because you need SSH

    link_scripts 
    link_config
    setup_neovim
}

setup_neovim() {
    info "Linking neovim config & installing packages"
    mkdir -p "$NEOVIM_PATH"
    ln -sfv $DOTFILES_PATH/init.lua "$NEOVIM_PATH/init.lua"

    mkdir -p "$NEOVIM_PLUGIN_PATH"
    # ensure_repo $DOTFILES_PATH $DOTFILES_REPO
    ensure_repo "$NEOVIM_PLUGIN_PATH/telescope.nvim" "nvim-telescope/telescope.nvim"
    ensure_repo "$NEOVIM_PLUGIN_PATH/plenary.nvim" "nvim-lua/plenary.nvim"
    ensure_repo "$NEOVIM_PLUGIN_PATH/nvim-cmp" "hrsh7th/nvim-cmp"
    ensure_repo "$NEOVIM_PLUGIN_PATH/cmp-nvim-lsp" "hrsh7th/cmp-nvim-lsp"
    ensure_repo "$NEOVIM_PLUGIN_PATH/cmp-buffer" "hrsh7th/cmp-buffer"
    ensure_repo "$NEOVIM_PLUGIN_PATH/cmp-path" "hrsh7th/cmp-path"
    ensure_repo "$NEOVIM_PLUGIN_PATH/tokyonight.nvim" "folke/tokyonight.nvim"
    ensure_repo "$NEOVIM_PLUGIN_PATH/nvim-web-devicons" "nvim-tree/nvim-web-devicons"
    ensure_repo "$NEOVIM_PLUGIN_PATH/nvim-lspconfig" "neovim/nvim-lspconfig"
    ensure_repo "$NEOVIM_PLUGIN_PATH/mason.nvim" "williamboman/mason.nvim"
    ensure_repo "$NEOVIM_PLUGIN_PATH/mason-lspconfig.nvim" "williamboman/mason-lspconfig.nvim"
    ensure_repo "$NEOVIM_PLUGIN_PATH/vim-fugitive" "tpope/vim-fugitive"
    ensure_repo "$NEOVIM_PLUGIN_PATH/nvim-treesitter" "nvim-treesitter/nvim-treesitter"

    
    # fugitive?
}

link_scripts() {
    info "Linking scripts to ~/.local/bin"
    for script in "$DOTFILES_PATH/bin/"*; do
        ln -sfv "$script" "$HOME/.local/bin/"
    done
}

link_config() {
    info "Linking configuration files"
    for config in "$DOTFILES_PATH/config/"*; do
        local name=$(basename "$config" | sed 's/\.[^.]*$//')
        local filename=$(basename "$config")
        if [[ "${filename##*.}" != "$filename" ]]; then # if no ext it's a .file
            mkdir -p "$HOME/.config/$name"
            ln -sfv "$config" "$HOME/.config/$name/$(basename $config)"
        else
            [[ "$filename" != .* ]] && filename=".$filename"
            ln -sfv "$config" "$HOME/$filename"
        fi
    done
}


ensure_repo() {
    info "Ensuring $1 is available & up to date"
    if [ ! -d "$1" ]; then
        mkdir -p "${1%/*}"
        echo "${1%/*}"
        git clone "$GITHUB/$2" "$1"
    else
        git -C "$1" pull
    fi
}

info() {
    local text="$1"
    echo -e "\033[33m-> \033[32m${text}\033[0m"
}

main
