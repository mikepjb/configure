#!/bin/bash
# Configuration script for setting up your a Linux server.
# Test this with Docker

set +e

echo 'dns/initial ssl setup not included (print some notes pls.)'
echo 'sudo certbot --nginx -d example.com -d www.example.com'
echo 'first time with certbot you will be asked to enter your email'
echo 'sudo systemctl status certbot.timer'
echo 'now check'
echo 'A record with example.com and www.example.com'

############################################
# 1. setup data                            #
############################################

deps=(
  nginx # reverse proxy for app server + https
  sqlite3 # database
  python-certbot-nginx # cert creation/renewal
  ufw # firewall
  vim # usually included but lets make sure
)

############################################
# 2. utility functions                     #
############################################

join_by() { local IFS="$1"; shift; echo "$*"; }

############################################
# 3. configuration steps                   #
############################################

install_packages ${deps[@]}

# TODO setup the nginx proxy for your site

############################################
# 4. test setup                            #
############################################

sudo nginx -t # test nginx configuration
# sudo certbot renew --dry-run # won't work until first manual run

############################################
# 5. apply setup                           #
############################################

sudo systemctl enable ufw --now
sudo ufw allow 'Nginx Full'
sudo ufw delete allow 'Nginx HTTP'
sudo systemctl reload nginx

############################################
# 6. post deploy                           #
############################################

# backup server? literally copying back sqlite file?
